/**
 * GRID
 * 
 * Call it inside style using @import (e.g. @import column(12) for a grid with 12 columns)
 */

/**
 * Some settings
 */
// Wrapper width
$wrapperWidth: 70%;

// Grid column width
$column-width: 75px;

// Grid gutter width
$gutter-width: 20px;

// Max amount of columns
$columns: 12;


/**
 * Flex class
 */
.flex {
    display: flex;
    &--justify {
        &-start {
            @extend .flex;
            justify-content: flex-start;
        }
        &-end {
            @extend .flex;
            justify-content: flex-end;
        }
        &-center {
            @extend .flex;
            justify-content: center;
        }
    }
}

/**
 * Wrapper class
 */
.wrapper {
    width: $wrapperWidth;
    margin: 0 auto;
}

/**
 * Space class
 */
.space {
    margin-top: 50px;
    margin-bottom: 50px;
    &-inner {
        padding-top: 50px;
        padding-bottom: 50px;
    }
    @for $i from 1 through 100 {
        &-c-#{$i} {
            margin-top: #{$i}px;
            margin-bottom: #{$i}px; 
        }

    }
}


/**
 * Grid system
 */
@function gridsystem-width($columns:$columns) {
    @return ($column-width * $columns) + ($gutter-width * $columns);
}

$total-width: 100%;

@mixin clearfix() {
    *zoom:1;

    &:before,
    &:after {
        content:"";
        display:table;
    }
    &:after {
        clear:both;
    }
}

body {
    width: 100%;
    @include clearfix();
}

@mixin row($columns:$columns) {
    display: block;
    width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
    margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
    @include clearfix();
}

@mixin column($x,$columns:$columns) {
    display: inline;
    float: left;
    width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
    margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin push($offset:1) {
    margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin pull($offset:1) {
    margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
